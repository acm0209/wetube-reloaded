node.js란 javascript 언어를 browser 밖에서 사용할 수 있게 만든 것이다.

npm이란 javascript 언어를 위한 패키지 매니저이다. node package manager
사람들이 만들어놓은 패키지를 쉽게 다운로드 하고 공유할 수 있게 해줌.(express가 그 예)

scripts 어떤 파일을 처리할지 적은 명령어 모음이라고 생각하면 됨
node module : npm을 통해 설치한 모든 모듈이 들어감.

npm install -> dependencies를 보고 모듈을 알아서 설치함. (npm install express X)
-> node modules를 github에 올릴 필요가 없다. 파일이 커지는 것을 방지.
간단하다. -> package.json , index.js 만 공유해주면 된다.

package-lock : 버전 정보 등 그대로 넘겨받기위한 해시값 저장소.
.gitignore

babel 최신 자바스크립트를 nodejs가 이해할수 있는 자바스크립트로 컴파일
dependencies : 프로젝트를 실행하기 위해 필요한 dependencies.(가솔린)
devdependencies : 개발자에게 필요한 dependencies. (운전을 잘하기 위한 도구) (--save-dev)

nodemon :만든 파일이 수정되는지 감시. 수정되면 알아서 재시작. 

server : 컴퓨터. 항상 켜져 있다. request를 듣고 있다.
npm run dev

#3.9
    controller : request, res를 가짐.
    res.end() : 연결 종료.
    res.send() : 문장을 보냄
    이 외 많은 다양한 함수들이 존재한다.
    req가 뭐든 res는 필수다. 

    app.get(req, res)

#3.10
    middleware : req와 res 사의의 software
    middleware : controller, next인자를 가짐 : const middleware = (req,res,next) =>{next()}
    app.use() : middleware를 항상 실행시키기 위함. app.get() 앞에 와야 함.

#4.4
    홈페이지를 그룹화 해서 정리. 나중의 복잡함을 없애기 위해서
    Router는 공통 시작부분을 기반으로 url을 정리해주는 방법

#4.5
    export default sth -> sth만 export 함.
    여러개를 export 하려면 export sth 으로 하나하나 export 붙여주고, 받을 때 {sth1, sth2} 로 받음

#5.5
    pug : html 을 쓰지 않고 깔끔하게 코드를 쓸 수 있게 도와주는 프로그램
    extends base.pug -> base.pug 파일을 그대로 가져옴
    title #{pageTitle} : res.render("home", {pageTitle : "Home"}) 을 통해 인자를 넘겨줌.
    footer : include를 통해서 모든 pug 파일에 넣어주기 가능.
    base.pug / block content STH  -> extends 한 파일에서 STH 에 값을 넣어서 사용 가능.

#5.10
    each x in y  : y배열에서 가져온 x. 파이썬과 비슷. y는 render함수를 호출할 때 함께 전해주어야 하는 parameter.
    mixin : information 을 받는 footer라 생각하면 편함. -> include mixins 를 해 줘야 함.

#6.4
    post : backend 와 작용하기 위함. 
    req.params 는 (/:id(\\d+)) 를 의미함.(우리 내용에서는)
    req.body : form 에 접근함. middleware를 필요로 함. app.use(express.urlencoded({extended : true}));
    req.body name 에 접근하려면 form 안에서 name = sth 이리고 정의해야 한다


1. 몽고 사용하기
> mongo

2. 내가 가진 db 보기
> show dbs

3. 현재 사용 중인 db 확인
> db

4. 사용할 db 선택하기
> use dbName
(현재 수업에서는 `use wetube`)

5. db 컬렉션 보기
> show collections

6. db 컬렉션 안에 documents 보기
> db.collectionName.find()
(현재 수업에서는 `db.videos.find()`)

7. db 컬렉션 안에 documents 모두 제거
> db.collectionName.remove({})
(현재 수업에서는 `db.videos.find({})`)